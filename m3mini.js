function obsSleep(e, t = "obsSleep") { return new Promise(o => { setTimeout(() => { console.log(t, e, "s"), o(e) }, Math.floor(1e3 * Math.abs(e))) }) } function obsIsPage(e, t = 0, o = "obsHasPage") { return new Promise(n => { let l = setInterval(() => { location.href.toLowerCase().indexOf(e.toLowerCase()) > -1 && (clearInterval(l), t < 0 ? setTimeout(() => { console.log(o, e), n(e) }, 1e3 * Math.abs(t)) : t > 0 ? setTimeout(() => { console.log(o, e), n(e) }, 1e3 * Math.abs(t)) : (console.log(o, e), n(e))) }, 100) }) } function obsSetValue(e, t, o = 0, n = "obsSetValue") { return new Promise(l => { let s = setInterval(() => { let a = document.querySelector(e); a && (clearInterval(s), o < 0 ? setTimeout(() => { a.value = t, console.log(n, t), l(e) }, 1e3 * Math.abs(o)) : o > 0 ? (a.value = t, setTimeout(() => { console.log(n, t), l(e) }, 1e3 * Math.abs(o))) : (a.value = t, console.log(n, t), l(e))) }, 100) }) } function obsHasValue(e, t = "", o = 0, n = "obsHasValue") { return new Promise(l => { let s = setInterval(() => { let a = document.querySelector(e); a && (clearInterval(s), Math.abs(o) > 0 ? setTimeout(() => { console.log(n, t), t ? a.value == t && l(e) : a.value && l(e) }, 1e3 * Math.abs(o)) : (console.log(n, t), t ? a.value == t && l(e) : a.value && l(e))) }, 100) }) } function obsClick(e, t = 0, o = "obsClick") { return new Promise(n => { let l = setInterval(() => { let s = document.querySelector(e); s && (clearInterval(l), t < 0 ? setTimeout(() => { s.click(), console.log(o, e), n(e) }, 1e3 * Math.abs(t)) : t > 0 ? (s.click(), setTimeout(() => { console.log(o, e), n(e) }, 1e3 * Math.abs(t))) : (s.click(), console.log(o, e), n(e))) }, 100) }) } function obsHas(e, t = 0, o = "obsHas") { return new Promise(n => { let l = setInterval(() => { document.querySelector(e) && (clearInterval(l), Math.abs(t) > 0 ? setTimeout(() => { console.log(o, e), n(e) }, 1e3 * Math.abs(t)) : (console.log(o, e), n(e))) }, 100) }) } function obsHasFunc(e, t, o = 0, n = "obsHasFunc") { return new Promise(l => { let s = setInterval(() => { document.querySelector(e) && (clearInterval(s), o < 0 ? setTimeout(() => { t && t(), console.log(n, e), l(e) }, 1e3 * Math.abs(o)) : o > 0 ? (t && t(), setTimeout(() => { console.log(n, e), l(e) }, 1e3 * Math.abs(o))) : (t && t(), console.log(n, e), l(e))) }, 100) }) } function obsHasText(e, t, o = 0, n = "obsHasText") { return new Promise(l => { let s = setInterval(() => { let a = document.querySelector(e); a && a.textContent.trim() == t && (clearInterval(s), o < 0 ? setTimeout(() => { console.log(n, t), l(e) }, 1e3 * Math.abs(o)) : o > 0 ? setTimeout(() => { console.log(n, t), l(e) }, 1e3 * Math.abs(o)) : (console.log(n, t), l(e))) }, 100) }) } function obsHasTextClick(e, t, o = 0, n = "text") { return new Promise(l => { let s = setInterval(() => { let a = document.querySelector(e); a && a.textContent.trim() == t && (clearInterval(s), o < 0 ? setTimeout(() => { a.click(), console.log(n, t), l(e) }, 1e3 * Math.abs(o)) : o > 0 ? (a.click(), setTimeout(() => { console.log(n, t), l(e) }, 1e3 * Math.abs(o))) : (a.click(), console.log(n, t), l(e))) }, 100) }) } function obsNotText(e, t, o = 0, n = "not text") { return new Promise(l => { let s = setInterval(() => { let a = document.querySelector(e); a && a.textContent.trim() != t && (clearInterval(s), o < 0 ? setTimeout(() => { console.log(n, t), l(e) }, 1e3 * Math.abs(o)) : o > 0 ? setTimeout(() => { console.log(n, t), l(e) }, 1e3 * Math.abs(o)) : (console.log(n, t), l(e))) }, 100) }) } function obsTrueFunc(e, t = 0, o = "func=>true") { return new Promise(n => { if (e) if (t < 0) setTimeout(() => { let t = e(); t && (console.log(o, t), n("func=>true")) }, 1e3 * Math.abs(t)); else if (t > 0) { let l = e(); setTimeout(() => { l && (console.log(o, l), n("func=>true")) }, 1e3 * Math.abs(t)) } else { let t = e(); t && (console.log(o, t), n("func=>true")) } }) } function obsFunc(e, t = 0, o = "func") { return new Promise(n => { e && (t < 0 ? setTimeout(() => { e(), console.log(o), n("func") }, 1e3 * Math.abs(t)) : t > 0 ? (e(), setTimeout(() => { console.log(o), n("func") }, 1e3 * Math.abs(t))) : (e(), console.log(o), n("func"))) }) } function obsTrue(e, t = 0, o = "true") { return new Promise(n => { e && (t < 0 ? setTimeout(() => { console.log(o, e), n(e) }, 1e3 * Math.abs(t)) : t > 0 ? setTimeout(() => { console.log(o, e), n(e) }, 1e3 * Math.abs(t)) : (console.log(o, e), n(e))) }) } function randStr(e = 12) { e = e || 32; let t = "abcdefghijkmnprstwxyz", o = t.length, n = ""; for (let l = 0; l < e; l++)n += t.charAt(Math.floor(Math.random() * o)); return n } function randNum(e = 12) { e = e || 32; let t = "123456789", o = t.length, n = ""; for (let l = 0; l < e; l++)n += t.charAt(Math.floor(Math.random() * o)); return n } function getUrlParam(e) { let t = new RegExp("(.|&)" + e + "=([^&]*)(&|$)"), o = window.location.href.match(t); return null != o ? unescape(o[2]) : null } function addStyleEle(e = "") { let t = document.createElement("style"); t.innerHTML = e, document.body.append(t) } function loadCssFile(e) { let t = document.getElementsByTagName("head")[0], o = document.createElement("link"); o.type = "text/css", o.rel = "stylesheet", o.href = e, t.appendChild(o) } function addScriptEle(e) { let t = document.createElement("script"); t.type = "text/javascript"; try { t.appendChild(document.createTextNode(e)) } catch (o) { t.text = e } document.getElementsByTagName("head")[0].appendChild(t) } function loadJsFile(e, t) { let o = document.getElementsByTagName("head")[0], n = document.createElement("script"); n.type = "text/javascript", n.src = e, "function" == typeof t && (n.onload = n.onreadystatechange = function () { this.readyState && "loaded" !== this.readyState && "complete" !== this.readyState || (t(), n.onload = n.onreadystatechange = null) }), o.appendChild(n) } function addDivEle(e = "", t = "", o = !1, n = "") { let l = document.createElement("div"); return l.className = e, l.innerHTML = t, "function" == typeof o && (l.onclick = o), n.length > 0 ? document.querySelector(n).append(l) : document.body.append(l), l } function addToolBtn(e = "", t = "", o = !1, n = {}) { (n = Object.assign({}, { yAlign: "bottom", xAlign: "left", boxSelector: ".monkeyToolBtnBox", btnSelector: ".monkeyToolBtn", boxCss: "", btnCss: "" }, n)).boxSelector && null == document.querySelector(n.boxSelector) && (addDivEle(n.boxSelector.replaceAll("\\.", " ")), addStyleEle(`\n      ${n.boxSelector} {\n        position: fixed;\n        bottom: 0;\n        left: 0;\n        display: flex;\n        flex-direction: column;\n        justify-content: center;\n        align-items: flex-start;\n        ${"top" == n.yAlign ? "top:0;bottom:auto;" : "top:auto;bottom:0;"}\n        ${"left" == n.xAlign ? "left:0;right:auto;" : "left:auto;right:0;align-items: flex-end;"}\n        line-height: 1;\n        cursor: pointer;\n        z-index: 999999;\n        font-size: 15px;\n        ${n.boxCss}\n      }\n      ${n.btnSelector} {\n        border: 2px solid red;\n        color: red;\n        padding: 5px 10px;\n        background: white;\n        font-size: 15px;\n        ${n.btnCss}\n      }\n    `)), addStyleEle(`\n    ${n.btnSelector}.${e} {\n      cursor: pointer;\n      ${n.btnCss}\n    }\n    `), addDivEle(`${n.btnSelector.replaceAll("\\.", " ")} ${e}`, t, o, n.boxSelector) } function removeIframe() { let e = new Object; e.ad = function () { let e = document.getElementsByTagName("iframe"), t = e.length; if (t > 0) for (let o = 0; o < t; o++)e[0].remove() }, e.timer = function () { let t = setInterval(function () { 0 == document.getElementsByTagName("iframe").length ? (clearInterval(t), console.log("清除")) : e.ad() }, 300) }, e.timer() } Date.prototype.format = function (e) { let t = { "M+": this.getMonth() + 1, "d+": this.getDate(), "h+": this.getHours(), "m+": this.getMinutes(), "s+": this.getSeconds(), "q+": Math.floor((this.getMonth() + 3) / 3), S: this.getMilliseconds() }; /(y+)/.test(e) && (e = e.replace(RegExp.$1, (this.getFullYear() + "").substr(4 - RegExp.$1.length))); for (let o in t) new RegExp("(" + o + ")").test(e) && (e = e.replace(RegExp.$1, 1 == RegExp.$1.length ? t[o] : ("00" + t[o]).substr(("" + t[o]).length))); return e }, String.prototype.replaceAll = function (e, t) { let o = new RegExp(e, "g"); return this.replace(o, t) }, Array.prototype.sample = function () { return this[Math.floor(Math.random() * this.length)] };